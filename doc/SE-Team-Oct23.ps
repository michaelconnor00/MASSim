%!PS-Adobe-3.0
%%Title: SimulationEngine.java, Team.java, Board.java, CommMedium.java, DummyTeam.java, UselessTeam.java, SimEngTeamTester.java, Table of Content
%%For: omimo
%%Creator: a2ps version 4.14
%%CreationDate: Sun Oct 23 14:04:31 2011
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 19
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 792 def
/sw 612 def
/llx 24 def
/urx 588 def
/ury 768 def
/lly 24 def
/#copies 1 def
/th 20.000000 def
/fnfs 15 def
/bfs 11.547912 def
/cw 6.928747 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   689.410325 th add
def
/pmw 0 def
/pmh 0 def
/v 0 def
/x [
  0
] def
/y [
  pmh ph add 0 mul ph add
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 4 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(import) K
( java.util.Calendar;) p n
(import) K
( java.util.Random;) p n
() N
(import) K
( massim.Team.TeamRoundCode;) p n
() N
(/**) C n
( * The main class of the simulator. ) N
( * ) N
( * @author Omid Alemi) N
( * @version 1.2 2011/10/16) N
( * ) N
( */) N
(public) K
( ) p
(class) K
( ) p
(SimulationEngine) L
( {) p n
() N
() S 4 T () S
(public) K
( ) p
(static) K
( ) p
(int) k
([] colorRange = {1, 2, 3, 4, 5, 6};) p n
() S 4 T () S
(public) K
( ) p
(static) K
( ) p
(int) k
([] actionCostsRange = ) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T () S 32 T () S 36 T ( {10, 40, 70, 100, 300, 400, 450,  500};) N
() S 4 T () S
(public) K
( ) p
(static) K
( ) p
(int) k
( numOfColors = colorRange.length;) p n
() S 4 T () S
(public) K
( ) p
(static) K
( ) p
(int) k
( numOfTeams;) p n
() S 4 T () S
(private) K
( ) p
(int) k
( boardh = 10;) p n
() S 4 T () S
(private) K
( ) p
(int) k
( boardw = 10;) p n
() N
() S 4 T () S
(public) K
( ) p
(static) K
( ) p
(double) k
( disturbanceLevel;) p 44 T () N
() N
() S 4 T () S
(private) K
( Team[] teams;) p n
() S 4 T (Board mainBoard;) N
() S 4 T () S
(int) k
([][] actionCostsMatrix;) p n
() S 4 T (RowCol[] goals;) N
() S 4 T (RowCol[] initAgentsPos;) N
() N
() S 4 T () S
(private) K
( ) p
(int) k
( roundCounter;) p n
() S 4 T () S
(private) K
( ) p
(int) k
([][] teamsScores;) p n
() S 4 T () S
(private) K
( ) p
(int) k
( numOfRuns;) p n
() N
() S 4 T () S
(private) K
( ) p
(boolean) k
( debuggingInf = ) p
(true) k
(;) p n
() S 4 T () S
(private) K
( ) p
(boolean) k
( debuggingErr = ) p
(true) k
(;) p n
() N
() S 4 T () S
(/**) C n
() S 4 T ( * SIMOK: The round executed without any problem and there is) N
() S 4 T ( *        at least one active team.) N
() S 4 T ( *        ) N
() S 4 T ( * SIMEND: All the teams are done.) N
() S 4 T ( * ) N
() S 4 T ( * SIMERR: There was a problem in the current round.) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(static) K
( enum SimRoundCode {) p n
() S 4 T () S 8 T (SIMOK, SIMEND, SIMERR) N
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * The constructor method) N
() S 4 T ( * ) N
() S 4 T ( * @param teams) S 20 T () S 24 T () S 28 T () S 32 T () S 36 T (The array of teams to be involved in ) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T () S 32 T () S 36 T (the simulations.) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( SimulationEngine\(Team[] teams\) {) p n
() S 4 T () S 8 T (logInf\(") S
(SE created for ) str
(" + teams.length + ") p
( teams.) str
("\);) p n
(SimulationEngine.java) (Page 1/5) (Oct 22, 11 18:59) title
border
grestore
(Printed by omimo) rhead
() (1/19) (Sunday October 23, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 2
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 4 T () S 8 T (this.teams = teams;) N
() S 4 T () S 8 T (SimulationEngine.numOfTeams = teams.length;) N
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Initializes the simulation engine for a new experiment. ) N
() S 4 T ( * ) N
() S 4 T ( * Each experiment consists in a number of runs.) N
() S 4 T ( * The final score of each team for each run will be stored in an ) N
() S 4 T ( * array.) N
() S 4 T ( * ) N
() S 4 T ( * @param numOfRuns) S 24 T () S 28 T () S 32 T () S 36 T (Number of desired runs for current ) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T () S 32 T () S 36 T (experiment setting.) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(void) k
( initializeExperiment\() p
(int) k
( numOfRuns\) {) p n
() S 4 T () S 8 T (logInf\(") S
(----- Experiment initialized for ) str
(" + numOfRuns) p n
() S 4 T () S 8 T () S 12 T () S 16 T (+ ") S
( number of runs -----) str
("\);) p n
() S 4 T () S 8 T (teamsScores = ) S
(new) K
( ) p
(int) k
([numOfTeams][numOfRuns];) p n
() S 4 T () S 8 T (this.numOfRuns = numOfRuns;) N
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Prepares the simulation engine parameters for a new run. ) N
() S 4 T ( * ) N
() S 4 T ( * This includes a new board setting, new action costs matrix, and) N
() S 4 T ( * possibly new positions for initial agents' position and goals' position.) N
() S 4 T ( * ) N
() S 4 T ( * The method also invokes the Team.initializeRun\(\) for all teams.) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(void) k
( initializeRun\(\) {) p n
() S 4 T () S 8 T (logInf\(") S
(--- The run initialized ---) str
("\);) p n
() S 4 T () S 8 T (roundCounter = 0;) N
() S 4 T () S 8 T (mainBoard = Board.randomBoard\(boardh, boardw\);) N
() S 4 T () S 8 T (logInf\(") S
(The board setting for this run is:\\n) str
(" + mainBoard.toString\(\)\);) p n
() N
() S 4 T () S 8 T (goals = ) S
(new) K
( RowCol[Team.teamSize];) p n
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i < Team.teamSize; i++\)) p n
() S 4 T () S 8 T () S 12 T (goals[i] = ) S
(new) K
( RowCol\(boardh - 1, boardw - 1\);) p n
() N
() S 4 T () S 8 T (initAgentsPos = ) S
(new) K
( RowCol[Team.teamSize];) p n
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i < Team.teamSize; i++\)) p n
() S 4 T () S 8 T () S 12 T (initAgentsPos[i] = ) S
(new) K
( RowCol\(0, 0\);) p n
() N
() S 4 T () S 8 T (Random rnd = ) S
(new) K
( Random\(Calendar.getInstance\(\).getTimeInMillis\(\)\);) p n
() S 4 T () S 8 T (actionCostsMatrix = ) S
(new) K
( ) p
(int) k
([Team.teamSize][numOfColors];) p n
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i < Team.teamSize; i++\)) p n
() S 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( j = 0; j < numOfColors; j++\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T (actionCostsMatrix[i][j] = actionCostsRange[rnd) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T (.nextInt\(actionCostsRange.length\)];) N
() N
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( t = 0; t < numOfTeams; t++\)) p n
() S 4 T () S 8 T () S 12 T (teams[t].initializeRun\(initAgentsPos, goals, actionCostsMatrix\);) N
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Executes one round of the simulation.) N
() S 4 T ( * ) N
() S 4 T ( * Each round of the simulation consist in updating the board; executing) N
() S 4 T ( * each team; and checking the current status of the simulation.) N
(SimulationEngine.java) (Page 2/5) (Oct 22, 11 18:59) title
border
grestore
(Printed by omimo) rhead
() (Sunday October 23, 2011) (2/19) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 3
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() C 4 T ( * ) N
() S 4 T ( * It is possible to implement error handling mechanisms for this method.) N
() S 4 T ( * ) N
() S 4 T ( * @return ) S 16 T () S 20 T () S 24 T () S 28 T (The proper simulation-round-code representing ) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T (the status of the round. ) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( SimRoundCode round\(\) {) p n
() S 4 T () S 8 T (roundCounter++;) N
() S 4 T () S 8 T (logInf\(") S
(Round #) str
(" + roundCounter + ") p
( started ...) str
("\);) p n
() N
() S 4 T () S 8 T (logInf\(") S
(Chaning the board setting based on the disturbance level of ) str
("+) p n
() S 4 T () S 8 T () S 12 T () S 16 T (disturbanceLevel\);) N
() S 4 T () S 8 T (mainBoard.disturb\(disturbanceLevel\);) N
() N
() S 4 T () S 8 T (TeamRoundCode[] tsc = ) S
(new) K
( TeamRoundCode[teams.length];) p n
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( t = 0; t < teams.length; t++\) {) p n
() S 4 T () S 8 T () S 12 T (tsc[t] = teams[t].round\(mainBoard\);) N
() S 4 T () S 8 T () S 12 T (logInf\(teams[t].getClass\(\).getSimpleName\(\)) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T (+ ") S
( returned with the code: ) str
(" + tsc[t].toString\(\)\);) p n
() S 4 T () S 8 T (}) N
() N
() S 4 T () S 8 T () S
(boolean) k
( allTeamsDone = ) p
(true) k
(;) p n
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( t = 0; t < teams.length; t++\) {) p n
() S 4 T () S 8 T () S 12 T () S
(if) K
( \(tsc[t] == TeamRoundCode.OK\) {) p n
() S 4 T () S 8 T () S 12 T () S 16 T (allTeamsDone = ) S
(false) k
(;) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S
(break) K
(;) p n
() S 4 T () S 8 T () S 12 T (}) N
() S 4 T () S 8 T (}) N
() N
() S 4 T () S 8 T () S
(if) K
( \(allTeamsDone\)) p n
() S 4 T () S 8 T () S 12 T () S
(return) K
( SimRoundCode.SIMEND;) p n
() S 4 T () S 8 T () S
(else) K n
() p 4 T () S 8 T () S 12 T () S
(return) K
( SimRoundCode.SIMOK;) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Executes the simulator for one whole run. ) N
() S 4 T ( * ) N
() S 4 T ( * A run consists in invoking the round\(\) until it indicates that it is ) N
() S 4 T ( * either done or there was a problem during the execution.) N
() S 4 T ( * ) N
() S 4 T ( * @return ) S 16 T () S 20 T () S 24 T () S 28 T (The return code of the last round method) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T (invocation,) S 40 T (representing the return code ) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T (of the run.) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( SimRoundCode run\(\) {) p n
() S 4 T () S 8 T (logInf\(") S
(-- The run started --) str
("\);) p n
() S 4 T () S 8 T (SimRoundCode src = SimRoundCode.SIMOK;) N
() S 4 T () S 8 T () S
(while) K
( \(src == SimRoundCode.SIMOK\)) p n
() S 4 T () S 8 T () S 12 T (src = round\(\);) N
() S 4 T () S 8 T (logInf\(") S
(-- The run ended --) str
("\);) p n
() S 4 T () S 8 T () S
(return) K
( src;) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Executes the simulation for one whole experiment. ) N
() S 4 T ( * ) N
() S 4 T ( * A experiment consists in multiple runs using the identical set ) N
() S 4 T ( * of parameters, but with a new board and costs settings.) N
(SimulationEngine.java) (Page 3/5) (Oct 22, 11 18:59) title
border
grestore
(Printed by omimo) rhead
() (3/19) (Sunday October 23, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4) 4
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() C 4 T ( * ) N
() S 4 T ( * @return ) S 16 T () S 20 T () S 24 T () S 28 T (The score of each team averaged over multiple) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T (runs.) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(int) k
([] runExperiment\(\) {) p n
() S 4 T () S 8 T (logInf\(") S
(---- The experiment started ----) str
("\);) p n
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( r = 0; r < numOfRuns; r++\) {) p n
() S 4 T () S 8 T () S 12 T (initializeRun\(\);) N
() S 4 T () S 8 T () S 12 T (run\(\);) N
() S 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( t = 0; t < numOfTeams; t++\) {) p n
() S 4 T () S 8 T () S 12 T () S 16 T (teamsScores[t][r] = teams[t].teamRewardPoints\(\);) N
() S 4 T () S 8 T () S 12 T () S 16 T (logInf\(") S
(Team ) str
(" + teams[t].getClass\(\).getSimpleName\(\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T (+ ") S
( scored ) str
(" + teams[t].teamRewardPoints\(\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T (+ ") S
( for this run.) str
("\);) p n
() S 4 T () S 8 T () S 12 T (}) N
() S 4 T () S 8 T (}) N
() S 4 T () S 8 T (logInf\(") S
(---- The experiment ended ----) str
("\);) p n
() N
() S 4 T () S 8 T () S
(int) k
([] averageTeamScores = ) p
(new) K
( ) p
(int) k
([numOfTeams];) p n
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( t = 0; t < numOfTeams; t++\)) p n
() S 4 T () S 8 T () S 12 T (averageTeamScores[t] = average\(teamsScores[t]\);) N
() N
() S 4 T () S 8 T () S
(return) K
( averageTeamScores;) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Calculates the average of the given integer array.) N
() S 4 T ( * ) N
() S 4 T ( * Note: it calculates the average using a double division then) N
() S 4 T ( * rounding the result to the nearest integer.) N
() S 4 T ( * ) N
() S 4 T ( * @param numbers) S 24 T (    The array of integer numbers) N
() S 4 T ( * @return ) S 16 T () S 20 T () S 24 T () S 28 T (The average of the input array) N
() S 4 T ( */) N
() p 4 T () S
(private) K
( ) p
(int) k
( average\() p
(int) k
([] numbers\) {) p n
() S 4 T () S 8 T () S
(int) k
( sum = 0;) p n
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i < numbers.length; i++\)) p n
() S 4 T () S 8 T () S 12 T (sum += numbers[i];) N
() S 4 T () S 8 T () S
(return) K
( \() p
(int) k
(\) Math.round\(\() p
(double) k
(\)sum / numbers.length\);) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Prints the log message into the output if the information debugging level) N
() S 4 T ( * is turned on \(debuggingInf\).) N
() S 4 T ( * ) N
() S 4 T ( * @param msg) S 20 T () S 24 T () S 28 T ( The desired message to be printed) N
() S 4 T ( */) N
() p 4 T () S
(private) K
( ) p
(void) k
( logInf\(String msg\) {) p n
() S 4 T () S 8 T () S
(if) K
( \(debuggingInf\)) p n
() S 4 T () S 8 T () S 12 T (System.out.println\(") S
([SimulationEngine]: ) str
(" + msg\);) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Prints the log message into the output if the error debugging level is) N
() S 4 T ( * turned on \(debuggingErr\).) N
() S 4 T ( * ) N
() S 4 T ( * @param msg) S 20 T () S 24 T () S 28 T (  The desired message to be printed) N
() S 4 T ( */) N
() p 4 T () S
(private) K
( ) p
(void) k
( logErr\(String msg\) {) p n
(SimulationEngine.java) (Page 4/5) (Oct 22, 11 18:59) title
border
grestore
(Printed by omimo) rhead
() (Sunday October 23, 2011) (4/19) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 5
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 4 T () S 8 T () S
(if) K
( \(debuggingErr\)) p n
() S 4 T () S 8 T () S 12 T (System.err.println\(") S
([SimulationEngine]: ) str
(" + msg\);) p n
() S 4 T (}) N
(}) N
(SimulationEngine.java) (Page 5/5) (Oct 22, 11 18:59) title
border
grestore
(Printed by omimo) rhead
() (5/19) (Sunday October 23, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 6
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(import) K
( java.util.Random;) p n
() N
(/**) C n
( * Team.java) N
( * ) N
( * ) N
( * @author Omid Alemi) N
( * @version 1.2 2011/10/17) N
( */) N
(public) K
( ) p
(class) K
( ) p
(Team) L
( {) p n
() N
() S 4 T () S
(private) K
( ) p
(static) K
( ) p
(int) k
( nextID = 1; ) p
(// for debugging purposes only) c n
() p 4 T () S
(private) K
( ) p
(int) k
( id;) p n
() N
() S 4 T () S
(public) K
( ) p
(static) K
( ) p
(int) k
( teamSize;) p n
() S 4 T () S
(public) K
( ) p
(static) K
( ) p
(int) k
( initResCoef;) p n
() S 4 T () S
(public) K
( ) p
(static) K
( ) p
(double) k
( mutualAwareness;) p n
() S 4 T () N
() S 4 T () S
(private) K
( CommMedium commMedium;) p n
() S 4 T () S
(private) K
( ) p
(int) k
([][] actionCostsMatrix;) p n
() N
() S 4 T () S
(private) K
( ) p
(static) K
( Random rnd1 = ) p
(new) K
( Random\(\);) p n
() N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * OK: The round executed without any problem and there is) N
() S 4 T ( *      at least one active agent.) N
() S 4 T ( *        ) N
() S 4 T ( * MEND: All the agents are done.) N
() S 4 T ( * ) N
() S 4 T ( * ERR: There was a problem in the current round.) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(static) K
( enum TeamRoundCode {) p n
() S 4 T () S 8 T (OK, DONE, ERR) N
() S 4 T (}) N
() N
() S 4 T () S
(private) K
( ) p
(boolean) k
( debuggingInf = ) p
(true) k
(;) p n
() S 4 T () S
(public) K
( ) p
(int) k
( testRunCounter;) p n
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Default constructor) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( Team\(\) {) p n
() S 4 T () S 8 T (id = nextID++;) N
() S 4 T () S 8 T (commMedium = ) S
(new) K
( CommMedium\(Team.teamSize\);) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Initializes the team and agents for a new run.) N
() S 4 T ( * ) N
() S 4 T ( * Called by the simulation engine \(SimulationEngine.initializeRun\(\)\)) N
() S 4 T ( * It should reset necessary variables values.) N
() S 4 T ( * ) N
() S 4 T ( * @param initAgentsPos) S 28 T () S 32 T () S 36 T () S 40 T () S 44 T (Array of initial agents) S 68 T (position) N
() S 4 T ( * @param goals) S 20 T () S 24 T () S 28 T () S 32 T () S 36 T () S 40 T () S 44 T (Array of initial goals position) N
() S 4 T ( * @param actionCostMatrix) S 32 T () S 36 T () S 40 T () S 44 T (Matrix of action costs) N
() S 4 T ( */) N
(Team.java) (Page 1/3) (Oct 22, 11 21:43) title
border
grestore
(Printed by omimo) rhead
() (Sunday October 23, 2011) (6/19) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 7
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 4 T () S
(public) K
( ) p
(void) k
( initializeRun\(RowCol[] initAgentsPos, RowCol[] goals,) p n
() S 4 T () S 8 T () S 12 T () S
(int) k
([][] actionCostMatrix\) {) p n
() S 4 T () S 8 T (logInf\(") S
(initilizing for a new run.) str
("\);) p n
() S 4 T () S 8 T (commMedium.clear\(\);) N
() N
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i < teamSize; i++\)) p n
() S 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( j = 0; j < SimulationEngine.numOfColors; j++\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T (this.actionCostsMatrix[i][j] = actionCostMatrix[i][j];) N
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Starts a new round of the simulation for this team.) N
() S 4 T ( * ) N
() S 4 T ( * Called by the simulation engine \(SimulationEngine.round\(\)\).) N
() S 4 T ( * ) N
() S 4 T ( * It is possible to implement error handling mechanisms for this method.) N
() S 4 T ( *  ) N
() S 4 T ( * @param board) S 20 T () S 24 T () S 28 T () S 32 T () S 36 T () S 40 T () S 44 T (The current board representation) N
() S 4 T ( * @return) S 16 T () S 20 T () S 24 T () S 28 T () S 32 T () S 36 T () S 40 T () S 44 T (The proper TeamRoundCode based on) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T () S 32 T () S 36 T () S 40 T () S 44 T (the team's current state.) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( TeamRoundCode round\(Board board\) {) p n
() S 4 T () S 8 T (logInf\(") S
(starting a new round) str
("\);) p n
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i < Team.teamSize; i++\) {) p n
() N
() S 4 T () S 8 T () S 12 T () S
(int) k
([][] probActionCostMatrix = ) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S
(new) K
( ) p
(int) k
([Team.teamSize][SimulationEngine.numOfColors];) p n
() S 4 T () S 8 T () S 12 T () N
() S 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( p = 0; p < Team.teamSize; p++\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S
(for) K
( \() p
(int) k
( q = 0; q < SimulationEngine.numOfColors; q++\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S
(if) K
( \(rnd1.nextDouble\(\) < Team.mutualAwareness) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T (|| p == i\)) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T (probActionCostMatrix[p][q] = ) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T (actionCostsMatrix[p][q];) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S
(else) K n
() p 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T (probActionCostMatrix[p][q] = ) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T (SimulationEngine.actionCostsRange[) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T ( rnd1.nextInt\() N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T () S 32 T () S 36 T ( SimulationEngine.actionCostsRange.length\)];) N
() N
() S 4 T () S 8 T (}) N
() N
() S 4 T () S 8 T () S
(if) K
( \(testRunCounter > 0\) {  ) p
(// For debugging purposes only; ) c n
() p 4 T () S 8 T () S 12 T (testRunCounter--;) S 32 T (   ) S
(// indicates when the team should be done) c n
() p 4 T () S 8 T () S 12 T () S
(return) K
( TeamRoundCode.OK;) p n
() S 4 T () S 8 T (} ) S
(else) K
( {) p n
() S 4 T () S 8 T () S 12 T (logInf\(") S
( is done!) str
("\);) p n
() S 4 T () S 8 T () S 12 T () S
(return) K
( TeamRoundCode.DONE;) p n
() S 4 T () S 8 T (}) N
() S 4 T (}) N
() N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * To get the collective reward points of the team members) N
() S 4 T ( * ) N
() S 4 T ( * @return ) S 16 T () S 20 T () S 24 T () S 28 T () S 32 T () S 36 T (The amount of reward points that all the ) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T () S 32 T () S 36 T (team's agents has earned) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(int) k
( teamRewardPoints\(\) {) p n
(Team.java) (Page 2/3) (Oct 22, 11 21:43) title
border
grestore
(Printed by omimo) rhead
() (7/19) (Sunday October 23, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 8
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 4 T () S 8 T () S
(int) k
( sum = 0;) p n
() S 4 T () S 8 T () S
(// for \(Agent a: agents\)) c n
() p 4 T () S 8 T () S
(// sum += a.rewardPoints\(\);) c n
() p 4 T () S 8 T () S
(return) K
( sum;) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Prints the log message into the output if the information debugging level) N
() S 4 T ( * is turned on \(debuggingInf\).) N
() S 4 T ( * ) N
() S 4 T ( * @param msg) S 20 T () S 24 T () S 28 T () S 32 T () S 36 T (The desired message to be printed) N
() S 4 T ( */) N
() p 4 T () S
(private) K
( ) p
(void) k
( logInf\(String msg\) {) p n
() S 4 T () S 8 T () S
(if) K
( \(debuggingInf\)) p n
() S 4 T () S 8 T () S 12 T (System.out.println\(") S
([Team ) str
(" + id + ") p
(]: ) str
(" + msg\);) p n
() S 4 T (}) N
(}) N
(Team.java) (Page 3/3) (Oct 22, 11 21:43) title
border
grestore
(Printed by omimo) rhead
() (Sunday October 23, 2011) (8/19) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 9
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(import) K
( java.util.Random;) p n
() N
(/**) C n
( * The class to hold the board settings) N
( * ) N
( * @author Omid Alemi) N
( * @version 1.1) N
( */) N
(public) K
( ) p
(class) K
( ) p
(Board) L
( {) p n
() S 4 T () S
(private) K
( ) p
(static) K
( Random rndBoardGen = ) p
(new) K
( Random\(\);) p n
() N
() S 4 T () S
(private) K
( ) p
(int) k
([][] mainBoard;) p n
() N
() S 4 T () S
(private) K
( ) p
(final) K
( ) p
(int) k
( rows;) p n
() S 4 T () S
(private) K
( ) p
(final) K
( ) p
(int) k
( cols;) p n
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Constructor) N
() S 4 T ( * ) N
() S 4 T ( * @param r) S 16 T () S 20 T () S 24 T () S 28 T (The number of rows of the board) N
() S 4 T ( * @param c        ) S 24 T () S 28 T (The number of columns of the board) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( Board\() p
(int) k
( r, ) p
(int) k
( c\) {) p n
() S 4 T () S 8 T (rows = r;) N
() S 4 T () S 8 T (cols = c;) N
() S 4 T () S 8 T (mainBoard = ) S
(new) K
( ) p
(int) k
([rows][cols];) p n
() S 4 T (}) N
() N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * Returns the number of rows of the board) N
() S 4 T ( * ) N
() S 4 T ( * @return ) S 16 T () S 20 T () S 24 T () S 28 T (The number of rows of the board in int) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(int) k
( rows\(\) {) p n
() S 4 T () S 8 T () S
(return) K
( rows;) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Returns the number of columns of the board) N
() S 4 T ( * ) N
() S 4 T ( * @return ) S 16 T () S 20 T () S 24 T () S 28 T (The number of columns of the board in int) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(int) k
( cols\(\) {) p n
() S 4 T () S 8 T () S
(return) K
( cols;) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Sets the board setting to the giving setting) N
() S 4 T ( * ) N
() S 4 T ( * @param initBoard) S 24 T () S 28 T (The input board setting to be the main board's ) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T (setting) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(void) k
( setBoard\() p
(int) k
([][] inputBoard\) {) p n
() N
() S 4 T (}) N
() N
(Board.java) (Page 1/3) (Oct 22, 11 19:05) title
border
grestore
(Printed by omimo) rhead
() (9/19) (Sunday October 23, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 10
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 4 T () S
(/**) C n
() S 4 T ( * Returns the board setting) N
() S 4 T ( * ) N
() S 4 T ( * @return ) S 16 T () S 20 T () S 24 T () S 28 T (2 dim array of int representing the board's ) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T (setting) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(int) k
([][] getBoard\(\) {) p n
() S 4 T () S 8 T () S
(return) K
( mainBoard;) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Sets the value of one specific cell) N
() S 4 T ( * ) N
() S 4 T ( * @param row) S 20 T () S 24 T () S 28 T (The row# of the desired cell) N
() S 4 T ( * @param col       ) S 28 T (The column# of the desired cell) N
() S 4 T ( * @param color     ) S 28 T (The new color for the desired cell) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(void) k
( setCell\() p
(int) k
( row, ) p
(int) k
( col, ) p
(int) k
( color\) {) p n
() N
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Creates a board with randomly filled values \(colors\).) N
() S 4 T ( * ) N
() S 4 T ( * Static method; ) N
() S 4 T ( * ) N
() S 4 T ( * @return ) S 16 T () S 20 T () S 24 T () S 28 T (The instance of the newly randomly generated board) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(static) K
( Board randomBoard\() p
(int) k
( rows, ) p
(int) k
( cols\) {) p n
() S 4 T () S 8 T (Board b = ) S
(new) K
( Board\(rows, cols\);) p n
() N
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i < rows; i++\)) p n
() S 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( j = 0; j < cols; j++\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T (b.mainBoard[i][j] = rndBoardGen.nextInt\(6\);) N
() S 4 T () S 8 T () S
(return) K
( b;) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Adds random values \(disturbance\) to the cells of the board. ) N
() S 4 T ( * ) N
() S 4 T ( * Each cell on the board may be changed based on the probability defined by) N
() S 4 T ( * disturbanecLevel.) N
() S 4 T ( * ) N
() S 4 T ( * @param disturbanceLevel) S 32 T () S 36 T (The level of disturbance, between 0 and 1.0) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(void) k
( disturb\() p
(double) k
( disturbanceLevel\) {) p n
() N
() S 4 T () S 8 T (Random rndColor = ) S
(new) K
( Random\(\);) p n
() S 4 T () S 8 T (Random rndChange = ) S
(new) K
( Random\(\);) p n
() N
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i < rows; i++\)) p n
() S 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( j = 0; j < cols; j++\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S
(if) K
( \(rndChange.nextDouble\(\) < disturbanceLevel\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T (mainBoard[i][j] = SimulationEngine.colorRange[rndColor) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T (.nextInt\(SimulationEngine.numOfColors\)];) N
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Converts the current setting of the board into a string.) N
(Board.java) (Page 2/3) (Oct 22, 11 19:05) title
border
grestore
(Printed by omimo) rhead
() (Sunday October 23, 2011) (10/19) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 11
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() C 4 T ( * ) N
() S 4 T ( * For debugging purposes) N
() S 4 T ( * ) N
() S 4 T ( * @return ) S 16 T () S 20 T () S 24 T (The string representing the current setting of the board) N
() S 4 T ( */) N
() p 4 T (@Override) N
() S 4 T () S
(public) K
( String toString\(\) {) p n
() S 4 T () S 8 T (String out = "";) N
() N
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i < rows; i++\) {) p n
() S 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( j = 0; j < cols; j++\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T (out += mainBoard[i][j] + ") S
( ) str
(";) p n
() S 4 T () S 8 T () S 12 T (out += ") S
(\\n) str
(";) p n
() S 4 T () S 8 T (}) N
() N
() S 4 T () S 8 T () S
(return) K
( out;) p n
() S 4 T (}) N
() N
() S 4 T () S
(/**) C n
() S 4 T ( * Prints the costs associated with each square of the board based on the) N
() S 4 T ( * given action costs set into a string.) N
() S 4 T ( * ) N
() S 4 T ( * Used for debugging purposes.) N
() S 4 T ( * ) N
() S 4 T ( * @param actionCosts) S 28 T () S 32 T (The action costs set of an agent) N
() S 4 T ( * @return) S 16 T () S 20 T () S 24 T () S 28 T () S 32 T (The string representation of the board; ) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T () S 32 T (displaying the costs of each cell) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( String boardCostsToString\() p
(int) k
( actionCosts[]\) {) p n
() S 4 T () S 8 T (String out = "";) N
() S 4 T () S 8 T () S
(int) k
([] colorRange = SimulationEngine.colorRange;) p n
() N
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i < rows; i++\) {) p n
() S 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( j = 0; j < cols; j++\) {) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S
(int) k
( index = 0;) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S
(for) K
( \() p
(int) k
( k = 0; k < colorRange.length; k++\) {) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S
(int) k
( color = mainBoard[i][j];) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S
(if) K
( \(color == colorRange[k]\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T (index = k;) N
() S 4 T () S 8 T () S 12 T () S 16 T (}) N
() S 4 T () S 8 T () S 12 T () S 16 T (out += actionCosts[index] + ") S
(\\t) str
(";) p n
() S 4 T () S 8 T () S 12 T () S 16 T (;) N
() N
() S 4 T () S 8 T () S 12 T (}) N
() S 4 T () S 8 T () S 12 T (out += ") S
(\\n) str
(";) p n
() S 4 T () S 8 T (}) N
() N
() S 4 T () S 8 T () S
(return) K
( out;) p n
() S 4 T (}) N
() N
(}) N
(Board.java) (Page 3/3) (Oct 22, 11 19:05) title
border
grestore
(Printed by omimo) rhead
() (11/19) (Sunday October 23, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 12
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(/**) C n
( * CommMedium.java) N
( * Responsible for all the communications within a team of ) N
( * agents) N
( *) N
( * @author Omid Alemi) N
( * @version 1.1 2011/10/07) N
( */) N
(public) K
( ) p
(class) K
( ) p
(CommMedium) L
( {) p n
() N
() S 4 T () N
() S 4 T (String[][] channels;) N
() S 4 T () S
(int) k
( numOfChannels;) p n
() S 4 T () S
(/**) C n
() S 4 T ( * The default constructor) N
() S 4 T ( * ) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( CommMedium\() p
(int) k
( n\) {) p n
() N
() S 4 T () S 8 T (numOfChannels = n;) N
() S 4 T () S 8 T () S
(// Initializing all the channels) c n
() p 4 T () S 8 T (channels = ) S
(new) K
( String[numOfChannels][numOfChannels];) p n
() S 4 T () S 8 T (clear\(\);) N
() S 4 T (}) N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * Sends a message.) N
() S 4 T ( * ) N
() S 4 T ( * Puts the msg into the unidirectional channel between the sender) N
() S 4 T ( * and the receiver.) N
() S 4 T ( * ) N
() S 4 T ( * @param sender ) S 24 T () S 28 T () S 32 T () S 36 T (The sender agent's id) N
() S 4 T ( * @param receiver ) S 24 T () S 28 T () S 32 T () S 36 T (The receiver agent's id) N
() S 4 T ( * @param msg ) S 20 T () S 24 T () S 28 T () S 32 T () S 36 T (The message) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(void) k
( send\() p
(int) k
( sender, ) p
(int) k
( receiver, String msg\) {) p 64 T () N
() N
() S 4 T () S 8 T () S
(if) K
( \(receiver != sender\)) p n
() S 4 T () S 8 T () S 12 T (channels[sender][receiver] = msg;) N
() S 4 T (}) N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * Broadcasts a message.) N
() S 4 T ( * ) N
() S 4 T ( * Puts the msg into all the unidirectional channels starting from ) N
() S 4 T ( * the sender.) N
() S 4 T ( * ) N
() S 4 T ( * @param sender ) S 24 T () S 28 T () S 32 T () S 36 T (The sender agent's id) N
() S 4 T ( * @param msg ) S 20 T () S 24 T () S 28 T () S 32 T () S 36 T (The message) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(void) k
( broadcast\() p
(int) k
( sender, String msg\) {) p n
() S 4 T () S 8 T () N
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i=0;i<numOfChannels;i++\)) p 44 T () S 48 T () N
() S 4 T () S 8 T () S 12 T () S
(if) K
( \(i!=sender\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T (channels[sender][i] = msg;) S 44 T () S 48 T () N
() S 4 T (}) N
() N
(CommMedium.java) (Page 1/3) (Oct 22, 11 19:03) title
border
grestore
(Printed by omimo) rhead
() (Sunday October 23, 2011) (12/19) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 13
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * Receives the next message.) N
() S 4 T ( *  ) N
() S 4 T ( * Returns the next available message in the unidirectional channels) N
() S 4 T ( * ending to the receiver.) N
() S 4 T ( * ) N
() S 4 T ( * Returns an empty message if there is no message left on the ) N
() S 4 T ( * channels.) N
() S 4 T ( * ) N
() S 4 T ( * @param receiver) S 24 T () S 28 T () S 32 T () S 36 T (The id of the receiver agent) N
() S 4 T ( * @return) S 16 T () S 20 T () S 24 T () S 28 T () S 32 T () S 36 T (The message/empty string ) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( String receive\() p
(int) k
( receiver\) {) p n
() S 4 T () S 8 T () N
() S 4 T () S 8 T (String out="";) N
() S 4 T () S 8 T () N
() S 4 T () S 8 T () S
(for) K
(\() p
(int) k
( i=0;i<channels.length;i++\)) p n
() S 4 T () S 8 T ({) S 12 T () S 16 T () S 20 T () N
() S 4 T () S 8 T () S 12 T () S
(if) K
( \(!channels[i][receiver].isEmpty\(\)\)) p n
() S 4 T () S 8 T () S 12 T ({) N
() S 4 T () S 8 T () S 12 T () S 16 T (out = channels[i][receiver];) N
() S 4 T () S 8 T () S 12 T () S 16 T (channels[i][receiver] = "";) N
() S 4 T () S 8 T () S 12 T () S 16 T () S
(return) K
( out;) p n
() S 4 T () S 8 T () S 12 T (}) N
() S 4 T () S 8 T (}) N
() S 4 T () S 8 T () S
(return) K
( out;) p n
() S 4 T (}) N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * Checks if all the unidirectional channels are empty.) N
() S 4 T ( * ) N
() S 4 T ( * @return ) S 16 T () S 20 T () S 24 T () S 28 T () S 32 T (true if all the channels are empty.) N
() S 4 T ( * ) S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () S 28 T () S 32 T (/ false otherwise.) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(boolean) k
( allChannelsEmpty\(\) {) p n
() S 4 T () S 8 T () N
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i=0;i<numOfChannels;i++\)) p n
() S 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( j=0;j<Team.teamSize;j++\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S
(if) K
( \(!channels[i][j].isEmpty\(\)\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S
(return) K
( ) p
(false) k
(;) p n
() S 4 T () S 8 T () S
(return) K
( ) p
(true) k
(;) p n
() S 4 T (}) N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * Clears all the channels) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(void) k
( clear\(\) {) p n
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i=0;i<numOfChannels;i++\)) p n
() S 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( j=0;j<numOfChannels;j++\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T (channels[i][j]="";) N
() S 4 T (}) N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * Generates a string representation of all the communication channels) N
() S 4 T ( * and their values.) N
() S 4 T ( * ) N
() S 4 T ( * Used for the debugging purposes) N
() S 4 T ( */) N
(CommMedium.java) (Page 2/3) (Oct 22, 11 19:03) title
border
grestore
(Printed by omimo) rhead
() (13/19) (Sunday October 23, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 14
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 4 T (@Override) N
() S 4 T () S
(public) K
( String toString\(\) {) p n
() S 4 T () S 8 T (String s = "";) N
() S 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i=0;i<channels[0].length;i++\)) p n
() S 4 T () S 8 T ({) N
() S 4 T () S 8 T () S 12 T (s += ") S
([Agent ) str
("+ i+ ") p
('s incoming channels: ]\\n) str
(";) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T () N
() S 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( j=0;j<channels.length;j++\)) p n
() S 4 T () S 8 T () S 12 T ({) N
() S 4 T () S 8 T () S 12 T () S 16 T () S
(if) K
( \(i!=j\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T ({) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T (s += ") S
(Agent ) str
("+ j+ ") p
( : ) str
(";) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T (s += channels[j][i];) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T (s += ") S
(\\n) str
(";) p n
() S 4 T () S 8 T () S 12 T () S 16 T (}) N
() S 4 T () S 8 T () S 12 T (}) N
() S 4 T () S 8 T (}) S 12 T () S 16 T () S 20 T () S 24 T () N
() S 4 T () S 8 T () S
(return) K
( s;) p n
() S 4 T (}) N
() S 4 T () N
(}) N
(CommMedium.java) (Page 3/3) (Oct 22, 11 19:03) title
border
grestore
(Printed by omimo) rhead
() (Sunday October 23, 2011) (14/19) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 15
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim.agents.dummy;) p n
() N
(import) K
( java.util.Random;) p n
() N
(import) K
( massim.RowCol;) p n
(import) K
( massim.Team;) p n
() N
(public) K
( ) p
(class) K
( ) p
(DummyTeam) L
( ) p
(extends) K
( Team {) p 40 T () N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * The default constructor) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( DummyTeam\(\) {) p n
() S 4 T () S 8 T () S
(super) K
(\(\);) p 20 T () S 24 T () N
() S 4 T () S 8 T () N
() S 4 T (}) S 8 T () N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * The overridden Team.initializeRun\(\) method.) N
() S 4 T ( * ) N
() S 4 T ( * This calls the same method of the superclass first.) N
() S 4 T ( * ) N
() S 4 T ( */) N
() p 4 T (@Override) N
() S 4 T () S
(public) K
( ) p
(void) k
( initializeRun\() p n
() S 4 T () S 8 T () S 12 T (RowCol[] initAgentsPos, RowCol[] goals, ) S
(int) k
([][]actionCostMatrix\) {) p n
() S 4 T () S 8 T () N
() S 4 T () S 8 T (super.initializeRun\(initAgentsPos, goals, actionCostMatrix\);) N
() S 4 T () S 8 T (testRunCounter = 10 + \() S
(new) K
( Random\(\)\).nextInt\(5\);) p n
() S 4 T (}) N
() S 4 T () N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * For debugging purposes only:) N
() S 4 T ( * ) N
() S 4 T ( * The overridden Team.teamRewardPoints\(\) method to return a dummy amount ) N
() S 4 T ( * of reward points.) N
() S 4 T ( * ) N
() S 4 T ( * @return) S 16 T () S 20 T () S 24 T () S 28 T () S 32 T (The amount of reward points.) N
() S 4 T ( */) N
() p 4 T (@Override) N
() S 4 T () S
(public) K
( ) p
(int) k
( teamRewardPoints\(\) ) p n
() S 4 T ({) N
() S 4 T () S 8 T (Random rnd = ) S
(new) K
( Random\(\);) p n
() S 4 T () S 8 T () S
(return) K
( rnd.nextInt\(10000\);) p n
() S 4 T (}) N
() S 4 T () S 8 T () N
(}) N
(DummyTeam.java) (Page 1/1) (Oct 18, 11 21:28) title
border
grestore
(Printed by omimo) rhead
() (15/19) (Sunday October 23, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 16
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim.agents.dummy;) p n
() N
(import) K
( java.util.Random;) p n
() N
(import) K
( massim.RowCol;) p n
(import) K
( massim.Team;) p n
() N
(public) K
( ) p
(class) K
( ) p
(UselessTeam) L
( ) p
(extends) K
( Team{) p n
() S 4 T () N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * The default constructor) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( UselessTeam\(\) {) p n
() S 4 T () S 8 T () S
(super) K
(\(\);) p 20 T () S 24 T () S 28 T () S 32 T () N
() S 4 T (}) S 8 T () N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * The overridden Team.initializeRun\(\) method.) N
() S 4 T ( * ) N
() S 4 T ( * This calls the same method of the superclass first.) N
() S 4 T ( * ) N
() S 4 T ( */) N
() p 4 T (@Override) N
() S 4 T () S
(public) K
( ) p
(void) k
( initializeRun\() p n
() S 4 T () S 8 T () S 12 T (RowCol[] initAgentsPos, RowCol[] goals, ) S
(int) k
([][]actionCostMatrix\) {) p n
() S 4 T () S 8 T () N
() S 4 T () S 8 T (super.initializeRun\(initAgentsPos, goals, actionCostMatrix\);) S 72 T () S 76 T () N
() S 4 T () S 8 T (testRunCounter = 10 + \() S
(new) K
( Random\(\)\).nextInt\(5\);) p 60 T () S 64 T () N
() S 4 T (}) N
() S 4 T () N
() S 4 T () S
(/**) C 8 T ( ) N
() S 4 T ( * For debugging purposes only:) N
() S 4 T ( * ) N
() S 4 T ( * The overridden Team.teamRewardPoints\(\) method to return a dummy amount ) N
() S 4 T ( * of reward points.) N
() S 4 T ( * ) N
() S 4 T ( * @return) S 16 T () S 20 T () S 24 T () S 28 T () S 32 T (The amount of reward points.) N
() S 4 T ( */) N
() p 4 T (@Override) N
() S 4 T () S
(public) K
( ) p
(int) k
( teamRewardPoints\(\) ) p n
() S 4 T ({) N
() S 4 T () S 8 T (Random rnd = ) S
(new) K
( Random\(\);) p n
() S 4 T () S 8 T () S
(return) K
( rnd.nextInt\(10000\);) p n
() S 4 T (}) S 8 T () N
(}) N
(UselessTeam.java) (Page 1/1) (Oct 18, 11 21:27) title
border
grestore
(Printed by omimo) rhead
() (Sunday October 23, 2011) (16/19) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 17
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( tests;) p n
() N
(import) K
( java.util.Scanner;) p n
() N
(import) K
( massim.SimulationEngine;) p n
(import) K
( massim.Team;) p n
(import) K
( massim.agents.dummy.DummyTeam;) p n
(import) K
( massim.agents.dummy.UselessTeam;) p n
() N
(/**) C n
( * Simulation Engine/Teams interaction test.) N
( * ) N
( * @author Omid Alemi) N
( * @version 2011/10/17) N
( */) N
(public) K
( ) p
(class) K
( ) p
(SimEngTeamTester) L
( {) p n
() N
() S 4 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( main\(String[] args\)) p n
() S 4 T ({) N
() S 4 T () S 8 T (singleExperiment\(\); ) N
() S 4 T () S 8 T (multipleExperiments\(\);) N
() S 4 T (}) N
() S 4 T () N
() S 4 T () S
(/** ) C n
() S 4 T ( * To demonstrate the mechanism of performing a single experiment.) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( singleExperiment\(\)) p n
() S 4 T ({) N
() S 4 T () S 8 T () S
(int) k
( numberOfRuns = 4;) p n
() S 4 T () S 8 T () N
() S 4 T () S 8 T () S
(/* Create the teams involved in the simulation */) c n
() p 4 T () S 8 T (Team[] teams = ) S
(new) K
( Team[2];) p n
() S 4 T () S 8 T (teams[0] = ) S
(new) K
( DummyTeam\(\);) p n
() S 4 T () S 8 T (teams[1] = ) S
(new) K
( UselessTeam\(\);) p n
() S 4 T () S 8 T () N
() S 4 T () S 8 T () S
(/* Set the teams-wide parameters */) c
( ) p n
() S 4 T () S 8 T (Team.initResCoef = 200;) N
() S 4 T () S 8 T () N
() S 4 T () S 8 T () S
(/* Create and initialize the SimulationEngine */) c n
() p 4 T () S 8 T (SimulationEngine se = ) S
(new) K
( SimulationEngine\(teams\);) p 60 T () S 64 T () N
() S 4 T () S 8 T (se.initializeExperiment\(numberOfRuns\);) N
() S 4 T () S 8 T () N
() S 4 T () S 8 T () S
(/* Run the experiment */) c n
() p 4 T () S 8 T () S
(int) k
([] teamScores = se.runExperiment\(\);) p n
() S 4 T () S 8 T () N
() S 4 T () S 8 T () S
(/* Print the results */) c n
() p 4 T () S 8 T () S
(for) K
( \() p
(int) k
( i=0;i<teams.length;i++\)) p n
() S 4 T () S 8 T () S 12 T (System.out.println\(teams[i].getClass\(\).getSimpleName\(\)+) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T (") S
( average score = ) str
("+teamScores[i]\);) p n
() S 4 T (}) N
() S 4 T () N
() S 4 T () S
(/**) C n
() S 4 T ( * To demonstrate how to use the SimulatinEngine to perform) N
() S 4 T ( * multiple experiments by changing some parameters.) N
() S 4 T ( */) N
() p 4 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( multipleExperiments\(\)) p n
() S 4 T ({) N
() S 4 T () S 8 T () S
(int) k
( numberOfRuns = 4;) p n
() S 4 T () S 8 T () S
(/* Create the teams involved in the simulation */) c n
(SimEngTeamTester.java) (Page 1/2) (Oct 22, 11 17:31) title
border
grestore
(Printed by omimo) rhead
() (17/19) (Sunday October 23, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 18
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 4 T () S 8 T (Team[] teams = ) S
(new) K
( Team[2];) p n
() S 4 T () S 8 T (teams[0] = ) S
(new) K
( DummyTeam\(\);) p n
() S 4 T () S 8 T (teams[1] = ) S
(new) K
( UselessTeam\(\);) p n
() S 4 T () S 8 T () N
() S 4 T () S 8 T () S 12 T () S 16 T () N
() S 4 T () S 8 T () S
(/* Create the SimulationEngine */) c n
() p 4 T () S 8 T (SimulationEngine se = ) S
(new) K
( SimulationEngine\(teams\);) p n
() S 4 T () S 8 T () N
() S 4 T () S 8 T () S
(/* The experiments loop */) c n
() p 4 T () S 8 T () S
(for) K
( \() p
(int) k
( exp=0;exp<11;exp++\)) p n
() S 4 T () S 8 T ({) N
() S 4 T () S 8 T () S 12 T () S
(/* Set the experiment-wide parameters: */) c n
() p 4 T () S 8 T () S 12 T () S
(/* teams-wide, SimulationEngine, etc params */) c
() p 60 T () S 64 T () S 68 T () N
() S 4 T () S 8 T () S 12 T () N
() S 4 T () S 8 T () S 12 T (Team.initResCoef = 200;) N
() S 4 T () S 8 T () S 12 T () N
() S 4 T () S 8 T () S 12 T () S
(/* vary the disturbance: */) c n
() p 4 T () S 8 T () S 12 T (SimulationEngine.disturbanceLevel = 0.1 * exp;  ) N
() S 4 T () S 8 T () S 12 T () N
() S 4 T () S 8 T () S 12 T () S
(/* Initialize and run the experiment */) c n
() p 4 T () S 8 T () S 12 T (se.initializeExperiment\(numberOfRuns\);) S 52 T () S 56 T () S 60 T () N
() S 4 T () S 8 T () S 12 T () S
(int) k
([] teamScores = se.runExperiment\(\);) p n
() S 4 T () S 8 T () S 12 T () N
() S 4 T () S 8 T () S 12 T () S
(/* Print the results */) c n
() p 4 T () S 8 T () S 12 T () S
(for) K
( \() p
(int) k
( i=0;i<teams.length;i++\)) p n
() S 4 T () S 8 T () S 12 T () S 16 T (System.out.println\(") S
(Exp) str
("+exp+") p
(: disturbance level=) str
("+ ) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T (SimulationEngine.disturbanceLevel+") S
(; ) str
("+ ) p n
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T (teams[i].getClass\(\).getSimpleName\(\)+) N
() S 4 T () S 8 T () S 12 T () S 16 T () S 20 T () S 24 T (") S
( average score = ) str
("+teamScores[i]\);) p n
() S 4 T () S 8 T () S 12 T (\() S
(new) K
( Scanner\(System.in\)\).nextLine\(\);) p n
() S 4 T () S 8 T () S 12 T () N
() S 4 T () S 8 T (}) N
() S 4 T () S 8 T () N
() S 4 T (}) N
(}) N
(SimEngTeamTester.java) (Page 2/2) (Oct 22, 11 17:31) title
border
grestore
(Printed by omimo) rhead
() (Sunday October 23, 2011) (18/19) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 19
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Table of Contents) K n
( 1 ) p
(SimulationEngine.java) k
( sheets   1 to   5 \( 5\) pages   1-  5  241 lines) p n
( 2 ) S
(Team.java...........) k
( sheets   6 to   8 \( 3\) pages   6-  8  136 lines) p n
( 3 ) S
(Board.java..........) k
( sheets   9 to  11 \( 3\) pages   9- 11  170 lines) p n
( 4 ) S
(CommMedium.java.....) k
( sheets  12 to  14 \( 3\) pages  12- 14  140 lines) p n
( 5 ) S
(DummyTeam.java......) k
( sheets  15 to  15 \( 1\) pages  15- 15   49 lines) p n
( 6 ) S
(UselessTeam.java....) k
( sheets  16 to  16 \( 1\) pages  16- 16   47 lines) p n
( 7 ) S
(SimEngTeamTester.java) k
( sheets  17 to  18 \( 2\) pages  17- 18   95 lines) p n
(Table of Content) (Page 1/1) (Oct 23, 11 14:04) title
border
grestore
(Printed by omimo) rhead
() (19/19) (Sunday October 23, 2011) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
