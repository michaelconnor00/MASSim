%!PS-Adobe-3.0
%%Title: Agent.java, Board.java, CommMedium.java, RowCol.java, SimColor.java, SimParams.java, SimState.java, Simulator.java, Team.java, TeamState.java
%%For: omimo
%%Creator: a2ps version 4.14
%%CreationDate: Mon Oct  3 16:08:37 2011
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 11
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(/**) C n
( * Agent.java) N
( * An abstract class for all the agents to be used in the ) N
( * simulator) N
( *) N
( * @author Omid Alemi) N
( * @version 1.0 2011/10/01) N
( */) N
(public) K
( ) p
(abstract) K
( ) p
(class) K
( ) p
(Agent) L
( {) p n
() N
() S 8 T () S
(private) K
( RowCol pos;) p n
() S 8 T () S
(private) K
( Team team;) p n
() S 8 T () N
() S 8 T () S
(private) K
( RowCol[] myPath;  ) p
(// Or possibly of type Path) c n
() p 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Default constructor) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( Agent\(\) {) p n
() S 8 T () S 16 T () N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/** ) C n
() S 8 T ( * Initializes the agent) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( init\(Team t\) {) p n
() S 8 T () S 16 T () S
(// set the attributes to their initial values) c n
() p 8 T () S 16 T (setTeam\(t\);) N
() S 8 T () S 16 T () N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S 16 T () S 24 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Where agent performs its action) N
() S 8 T ( * @return 0 if it was successful, -1 for error \(might not ) N
() S 8 T ( *           be the right place for this\)) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(int) k
( act\(\) {) p n
() S 8 T () S 16 T () S
(// just move to the next position in the path as the ) c n
() p 8 T () S 16 T () S
(// default action, maybe do nothing as default) c n
() p 8 T () S 16 T () S
(return) K
( 0;) p n
() S 8 T (}) N
() S 8 T () N
() S 8 T () S 16 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Called by the Team in order to enable the agent to update ) N
() S 8 T ( * its information about the environment) N
() S 8 T ( * @param board The current state of the board) N
() S 8 T ( * @param agentsPos The current position of the agent's teammates ) N
() S 8 T ( *        on the board) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( perceive\(Board board, RowCol[] agentsPos\) {) p n
() S 8 T () S 16 T () S
(// Keep the necessary information private ) c n
() p 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Sends all the outgoing messages, if any, in the current iteration ) N
() S 8 T ( * in the team step\(\)) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( doSend\(\) {) p n
() S 8 T () S 16 T () S
(// nothing as default) c n
() p 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Receives all the incoming message, if any, from other agents in ) N
() S 8 T ( * the current iteration in the team cycle ) N
() S 8 T ( */) N
(Agent.java) (Page 1/2) (Oct 03, 11 15:38) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S
(public) K
( ) p
(void) k
( doReceive\(\) {) p n
() S 8 T () S 16 T () S
(// nothing as default) c n
() p 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Sets the team that the agent belongs to) N
() S 8 T ( * @param t The reference to the team) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( setTeam\(Team t\) {) p n
() S 8 T () S 16 T (team = t;) N
() S 8 T (}) N
(}) N
(Agent.java) (Page 2/2) (Oct 03, 11 15:38) title
border
grestore
(Printed by omimo) rhead
(Agent.java) (1/11) (Monday October 03, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(/**) C n
( * The class to hold the board settings) N
( * @author Omid Alemi) N
( *) N
( */) N
(public) K
( ) p
(class) K
( ) p
(Board) L
( {) p n
() N
() S 8 T () S
(private) K
( ) p
(int) k
([][] mainBoard;) p n
() S 8 T () S 16 T () N
() S 8 T () S
(private) K
( ) p
(final) K
( ) p
(int) k
( rows;) p n
() S 8 T () S
(private) K
( ) p
(final) K
( ) p
(int) k
( cols;) p n
() S 8 T ( ) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Constructor 1: just with the size) N
() S 8 T ( * ) N
() S 8 T ( * @param r The number of rows of the board) N
() S 8 T ( * @param c The number of columns of the board ) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( Board\() p
(int) k
( r, ) p
(int) k
( c\) { ) p n
() S 8 T () S 16 T (rows = r;) N
() S 8 T () S 16 T (cols = c;) N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Constructor 2: get the board setting) N
() S 8 T ( * @param board The 2dim array, representing the board's initial) N
() S 8 T ( *        setting) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( Board\() p
(int) k
([][] board\) {) p n
() S 8 T () S 16 T (rows = board.length;) N
() S 8 T () S 16 T (cols = board[0].length;) N
() S 8 T () S 16 T () S
(// board -> mainBoard) c n
() p 8 T (}) S 16 T () N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Sets the board setting to the inputBoard) N
() S 8 T ( * @param initBoard The input board setting to be the main board setting) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( setBoard\() p
(int) k
([][] inputBoard\) {) p n
() S 8 T () S 16 T () N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Returns the board setting) N
() S 8 T ( * @return 2 dim array of int representing the board's setting) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(int) k
([][] getBoard\(\){) p n
() S 8 T () S 16 T () S
(return) K
( mainBoard;) p n
() S 8 T (}) N
() S 8 T () N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Sets the value of one specific cell) N
() S 8 T ( * @param row) N
() S 8 T ( * @param col) N
() S 8 T ( * @param color) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
(  setCell\() p
(int) k
( row, ) p
(int) k
( col, ) p
(int) k
( color\) {) p n
() S 8 T () S 16 T () N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Returns a board with randomly filled values \(colors\).) N
() S 8 T ( * @return A new instance of the Board class) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(static) K
( Board randomBoard\(\) {) p n
(Board.java) (Page 1/2) (Oct 03, 11 12:03) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Adds random values \(disturbance\) to the cells of the board. ) N
() S 8 T ( * Each cell on the board may be changed based on the probability) N
() S 8 T ( * defined by disturbanecLevel  ) N
() S 8 T ( * @param disturbanceLevel The level of disturbance, between 0 and 1.0 ) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( distrub\() p
(double) k
( disturbanceLevel\) {) p n
() S 8 T () S 16 T () N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * The overridden clone\(\) method.) N
() S 8 T ( * would be used to create a new copy of the current board's representat) N
(ion.) N
() S 8 T ( */) N
() p 8 T (@Override) N
() S 8 T () S
(public) K
( Board clone\(\) {) p n
() S 8 T () S 16 T () S
(// Creates a new instance of the Board class with the ) c n
() p 8 T () S 16 T () S
(// same internal representation ) c n
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
(}) N
(Board.java) (Page 2/2) (Oct 03, 11 12:03) title
border
grestore
(Printed by omimo) rhead
(Board.java) (2/11) (Monday October 03, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(import) K
( java.util.HashMap;) p n
() N
(/**) C n
( * CommMedium.java) N
( * Responsible for all the communications within a team of ) N
( * agents) N
( *) N
( * @author Omid Alemi) N
( * @version 1.0 2011/10/01) N
( */) N
(public) K
( ) p
(class) K
( ) p
(CommMedium) L
( {) p n
() N
() S 8 T () S
(private) K
( ) p
(int) k
( numOfAgent;) p n
() S 8 T (Agent[] agents;) N
() S 8 T (HashMap<Agent,String[]> buffers;) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * The default constructor ) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( CommMedium\(\) {) p n
() S 8 T () S 16 T () N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Puts the msg into the receiver's special buffer for the sender) N
() S 8 T ( * @param sender The sender agent) N
() S 8 T ( * @param receiver The receiver agent) N
() S 8 T ( * @param msg The message) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( send\(Agent sender, Agent receiver, String msg\) {) p n
() S 8 T () S 16 T () N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Puts the msg into all the agent's special buffer for the sender) N
() S 8 T ( * @param sender The sender agent) N
() S 8 T ( * @param msg The message) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( broadcast\(Agent sender, String msg\) {) p n
() S 8 T () S 16 T () N
() S 8 T (}) N
() N
() S 8 T () S
(/**) C n
() S 8 T ( * Returns the tuples of the <sender,msg> for all the incoming ) N
() S 8 T ( * messages for the receiver agent  ) N
() S 8 T ( * @param receiver The receiver agent) N
() S 8 T ( * @return Tuples of the <sender,msg>) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( HashMap<Agent,String> receive\(Agent receiver\) {) p n
() S 8 T () S 16 T ( ) N
() S 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * To check whether the communication medium is empty. Means there ) N
() S 8 T ( * were no communication during the last iteration) N
() S 8 T ( * @return true if all the buffers for all the agents are empty. ) N
() S 8 T ( * ) S 16 T () S 24 T (   false otherwise) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(boolean) k
( isEmpty\(\) {) p n
() S 8 T () S 16 T ( ) N
() S 8 T () S 16 T () S
(return) K
( ) p
(false) k
(;) p n
() S 8 T (}) N
() S 8 T () N
(}) N
(CommMedium.java) (Page 1/1) (Oct 03, 11 11:56) title
border
grestore
(Printed by omimo) rhead
(CommMedium.java) (3/11) (Monday October 03, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(/*) c n
(Colored Trails) N
() N
(Copyright \(C\) 2006-2007, President and Fellows of Harvard College.  All Rights R) N
(eserved.) N
() N
(This program is free software; you can redistribute it and/or) N
(modify it under the terms of the GNU General Public License) N
(as published by the Free Software Foundation; either version 2) N
(of the License, or \(at your option\) any later version.) N
() N
(This program is distributed in the hope that it will be useful,) N
(but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(GNU General Public License for more details.) N
() N
(You should have received a copy of the GNU General Public License) N
(along with this program; if not, write to the Free Software) N
(Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.) N
(*/) N
() p n
() N
(/**) C n
(<b>Description</b>) N
(All game board locations are described as row-column pairs, which are ) N
(represented by the RowCol class.  This class includes methods to determine ) N
(whether two locations are the same \('equals\(\)'\) and whether two locations ) N
(are adjacent to each other \('areNeighbors\(\)'\).) N
() N
(<p>) N
() N
(<b>Issues</b>) N
(This class has two fields, representing a row and column on the board.  ) N
(These are public fields and they lack 'get' and 'set' methods.) N
(<p>) N
([depending upon how RowCol instances are used, we might want to think ) N
(about adding accessors and making the fields immutable \(by making them 'final'\) ) N
(once they are set in the constructor.]) N
() N
(<p>) N
() N
(<b>Future Development</b>) N
(If we are interested to pursue other game board geometries, then more generic ) N
(ways of representing location need to be constructed.  Nevertheless, from the ) N
(point of view of an API, the 'equals' and 'areNeighbors' methods are already gen) N
(eral.) N
() N
(<p>) N
() N
(<b>Original Summary</b>) N
(* A type representing a \(row,col\) position, as opposed to \(x,y\).  All) N
(* coordinates in CT3 should be in terms of \(row,col\).) N
(*) N
(* @author Paul Heymann \(ct3@heymann.be\)) N
(@author Sevan G. Ficici \(class-level review and comments\)) N
(*/) N
() p n
() N
(import) K
( java.io.Serializable;) p n
(import) K
( java.util.LinkedHashSet;) p n
() N
() N
(public) K
( ) p
(class) K
( ) p
(RowCol) L
( ) p
(implements) K
( Serializable {) p n
(/** Rows */) C n
(public) K
( ) p
(int) k
( row;) p n
(/** Columns */) C n
(public) K
( ) p
(int) k
( col;) p n
(RowCol.java) (Page 1/3) (Oct 01, 11 10:51) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(public) K
( RowCol\() p
(int) k
( row, ) p
(int) k
( col\) {) p n
(    this.row = row;) N
(    this.col = col;) N
(}) N
() N
(public) K
( RowCol\(RowCol rc\) {) p n
(    this.row = rc.row;) N
(    this.col = rc.col;) N
(}) N
() N
(/**) C n
() S 8 T (Move constructor \(SGF\)) N
() S 8 T () N
() S 8 T (@param rc) S 24 T () S 32 T () S 40 T (starting point) N
() S 8 T (@param deltarow) S 24 T () S 32 T (change in row \(may be negative\)) N
() S 8 T (@param deltacol) S 24 T () S 32 T (change in column \(may be negative\)) N
(*/) N
(public) K
( RowCol\(RowCol rc, ) p
(int) k
( deltarow, ) p
(int) k
( deltacol\)) p n
({) N
() S 8 T (this.row = rc.row + deltarow;) N
() S 8 T (this.col = rc.col + deltacol;) N
(}) N
() N
(public) K
( String toString\(\) {) p n
(    ) S
(return) K
( ") p
(\() str
(" + row + ") p
(,) str
(" + col + ") p
(\)) str
(";) p n
(}) N
() N
(/**) C n
( * Determine if this position equals another.) N
( * @param other The other position to compare to.) N
( * @return Whether the two RowCol objects refer to the same position.) N
( */) N
(public) K
( ) p
(boolean) k
( equals\(Object o\) {) p n
() S 8 T (RowCol other = \(RowCol\) o;) N
(    ) S
(return) K
( \(row == other.row && col == other.col\);) p n
(}) N
() N
(/**) C n
(    Calculate distance from here to some other location \(SGF\)) N
(*/) N
(public) K
( ) p
(int) k
( dist\(RowCol other\)) p n
({) N
(    ) S
(return) K
( Math.abs\(this.row - other.row\) + Math.abs\(this.col - other.col\);) p n
(}) N
() N
(/**) C n
( * Determine whether two \(row,col\) positions are neighbors.) N
( * @param rc1 The first position.) N
( * @param rc2 The second position.) N
( * @return Whether the positions are in fact neighbors.) N
( */) N
(public) K
( ) p
(static) K
( ) p
(boolean) k
( areNeighbors\(RowCol rc1, RowCol rc2\) {) p n
(    ) S
(return) K
( \(\(Math.abs\(rc1.row - rc2.row\) +) p n
(            Math.abs\(rc1.col - rc2.col\)\) == 1\);) N
(}) N
() N
(/**) C n
( * Gets the neighbor position of a position) N
( * @param board Board of the game) N
( * @return Neighbor positions) N
( * @author ilke) N
( */) N
(public) K
( LinkedHashSet<RowCol> getNeighbors\(Board board\) {) p n
() S 8 T (LinkedHashSet<RowCol> neighbors = ) S
(new) K
( LinkedHashSet<RowCol>\(\);) p n
() S 8 T () S
(/*) c n
() S 8 T (if\( col-1 >= 0 \)) N
() S 8 T () S 16 T (neighbors.add\(new RowCol\(row, col-1\)\);) N
() S 8 T (if\( row-1 >= 0 \)) N
(RowCol.java) (Page 2/3) (Oct 01, 11 10:51) title
border
grestore
(Printed by omimo) rhead
(RowCol.java) (4/11) (Monday October 03, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() c 8 T () S 16 T (neighbors.add\(new RowCol\(row-1, col\)\);) N
() S 8 T (if\( col + 1 < board.getCols\(\)\)) N
() S 8 T () S 16 T (neighbors.add\(new RowCol\(row, col+1\)\);) N
() S 8 T (if\( row + 1 < board.getRows\(\)\)) N
() S 8 T () S 16 T (neighbors.add\(new RowCol\(row+1, col\)\);) N
() S 8 T (*/) N
() p 8 T () S
(return) K
( neighbors;) p n
(}) N
(}) S
(RowCol.java) (Page 3/3) (Oct 01, 11 10:51) title
border
grestore
(Printed by omimo) rhead
(RowCol.java) (5/11) (Monday October 03, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(/**) C n
( * ) N
( */) N
(package) K
( massim;) p n
() N
(/**) C n
( * @author Omid Alemi) N
( * @version 1.0  2011/10/02) N
( */) N
(public) K
( enum SimColor {) p n
(  RED, GREEN, BLUE, YELLOW, ORANGE, PINK, PURPLE, GREY;) N
(  ) N
(  ) N
(}) N
(SimColor.java) (Page 1/1) (Oct 03, 11 11:05) title
border
grestore
(Printed by omimo) rhead
(SimColor.java) (6/11) (Monday October 03, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(/**) C n
( * SimParams.java) N
( * Purpose: The interface for the class holding different ) N
( * costs and awards defined by the user of the simulator) N
( *          and used by the agents) N
( * @author Omid Alemi) N
( * @version 1.0 2011/10/01) N
( */) N
() p n
(// x still not sure about using the interface ...) c n
(public) K
( ) p
(interface) K
( ) p
(SimParams) L
( {) p n
() S 8 T () N
(}) N
(SimParams.java) (Page 1/1) (Oct 03, 11 11:57) title
border
grestore
(Printed by omimo) rhead
(SimParams.java) (7/11) (Monday October 03, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(import) K
( java.util.List;) p n
() N
(/**) C n
( * The class representing the current state of the ) N
( * simulator: the simulator counter, all the team states,) N
( * and the board status.) N
( * ) N
( * @author Omid Alemi) N
( * @version 1.0 2011/10/02) N
( *) N
( */) N
(public) K
( ) p
(class) K
( ) p
(SimState) L
( {) p n
() N
() S 8 T (TeamState[] teamsState;) N
() S 8 T () S
(int) k
( simStep;) p n
() S 8 T (Board board;) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * The constructor method.) N
() S 8 T ( * @param simStep The simulator's counter at the this specific moment) N
() S 8 T ( * @param board The current board state) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( SimState\() p
(int) k
( simStep, Board board\) {) p n
() S 8 T () S 16 T () S
(//The board should be copied internally, not referenced. ) c n
() p 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Adds a team state to the simulation's state) N
() S 8 T ( * @param ts The team state) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( addTeamState\(TeamState ts\) {) p n
() S 8 T () S 16 T () N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Returns the simulator's counter) N
() S 8 T ( * @return Simulator's counter) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(int) k
( simStep\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( simStep;) p n
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Returns the board representation of the simulator) N
() S 8 T ( * stored at the time step simStep) N
() S 8 T ( * @return The board object) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( Board board\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( board;) p n
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * ) N
() S 8 T ( * @return The list of teamState object for all the teams ) N
() S 8 T ( * in the simulator.) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( TeamState[] teamsState\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( teamsState;) p n
() S 8 T (}) N
() S 8 T () N
(}) N
(SimState.java) (Page 1/1) (Oct 03, 11 0:40) title
border
grestore
(Printed by omimo) rhead
(SimState.java) (8/11) (Monday October 03, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 9
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(import) K
( java.util.PriorityQueue;) p n
() N
(/**) C n
( * The Multiagent Teamwork Simulator) N
( * The main class of the simulator) N
( * ) N
( * @author Omid Alemi) N
( * @version 1.0 2011/10/01) N
( * ) N
( */) N
(public) K
( ) p
(class) K
( ) p
(Simulator) L
( {) p n
() N
() S 8 T () S
(private) K
( ) p
(int) k
( simCounter; ) p
(//change the name ) c n
() p 8 T () N
() S 8 T () S
(private) K
( Board board;) p n
() S 8 T () S
(private) K
( Team[] teams;        ) p n
(        ) N
() S 8 T () S
(public) K
( ) p
(static) K
( enum SimStepCode {SIMOK, SIMEND, SIMERR}) p n
() S 8 T () N
(    ) S
(public) K
( ) p
(static) K
( SimParams simParams;) p n
(    ) N
() S 8 T () S
(/**) C n
() S 8 T ( * Constructor) N
() S 8 T ( * ) S 16 T () N
() S 8 T ( * @param teams The array of team to be participated in the simulation) N
() S 8 T ( * @param simParams The class holding all the simulator parameters ) N
() S 8 T ( * @param initBoard The initial board settings) S 56 T ( ) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( Simulator\(Team[] teams, SimParams simParams\) {) p n
() S 8 T () S 16 T () N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Initializes the simulator.) N
() S 8 T ( * Should be called before step\(\) method) N
() S 8 T ( * @param initBoard The initial board, defined in the frontend) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( init\(Board initBoard\) {) p n
() S 8 T () S 16 T () S
(// load the initial board state into the board) c n
() p 8 T () S 16 T () S
(// initialize the teams) c n
() p 8 T () S 16 T () S
(// set the counter to zero) c n
() p 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Performs one step of the simulation based on the current simulator's ) N
() S 8 T ( * counter.) N
() S 8 T ( * Should be called by the frontend software) N
() S 8 T ( * @param disturbanceLevel The level of desired disturbance on the board) N
( ) N
() S 8 T ( * @return The proper code from the SimStepCode enum) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( SimStepCode step\() p
(double) k
( disturbanceLevel\) {) p 64 T () S 72 T () N
() S 8 T () S 16 T () S
(// increase the counter by 1) c 48 T () S 56 T () N
() p 8 T () S 16 T () S
(// refresh the board: only add the disturbance ) c n
() p 8 T () S 16 T () S
(// board.disturb\(disturbanceLevel\);) c n
() p 8 T () S 16 T () S
(// for each team in teams[]) c n
() p 8 T () S 16 T () S
(//      team.step\(board\);) c n
() p 8 T () S 16 T () S
(// return the proper simulation step code) c n
() p 8 T () S 16 T () N
() S 8 T () S 16 T () S
(return) K
( SimStepCode.SIMOK;) p n
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * can be used by a frontend to run the simulator until the end) N
() S 8 T ( * without interruption) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( autoplay\(\) {) p n
(Simulator.java) (Page 1/2) (Oct 03, 11 15:36) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(// run the simulation from current step in a loop until the last) c n
( step ) N
() p 8 T () S 16 T () S
(// \(determined by the return code\) without user interaction) c n
() p 8 T (}) N
() S 8 T () N
() S 8 T () N
() S 8 T () S
(/*) c n
() S 8 T ( * NOT SURE IF WE NEED THIS ANYMORE.) N
() S 8 T ( * EVERYTHING CAN BE DONE USING THE SIMSTATE and TEAMSTATE CLASSES.) N
() S 8 T (public void finish\(\) {) N
() S 8 T () S 16 T (// sum the scores) N
() S 8 T () S 16 T (// ********) N
() S 8 T (}*/) N
() p 8 T () N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * @return The current state of the simulation in a SimState object ) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( SimState getSimulationState\(\) {) p n
() S 8 T () S 16 T () N
() S 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p 32 T () S 40 T () N
() S 8 T (}) N
(}) N
(Simulator.java) (Page 2/2) (Oct 03, 11 15:36) title
border
grestore
(Printed by omimo) rhead
(Simulator.java) (9/11) (Monday October 03, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 10
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(import) K
( java.util.HashMap;) p n
() N
(/**) C n
( * Team.java) N
( * ) N
( *) N
( * @author Omid Alemi) N
( * @version 1.0 2011/10/01) N
( */) N
(public) K
( ) p
(class) K
( ) p
(Team) L
( {) p n
() N
() S 8 T () S
(private) K
( Agent[] agents;) p n
() S 8 T () S
(private) K
( CommMedium communicationMeduim;) p n
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Default constructor) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( Team\(\) {) p n
() S 8 T () S 16 T () N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/** ) C n
() S 8 T ( * Constructor, getting a set of agents as the members of the team) N
() S 8 T ( * @param agents An array of agents) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( Team\(Agent[] agents\) {) p n
() S 8 T () S 16 T (init\(agents\);) S 32 T () S 40 T () N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Initializes the team object) N
() S 8 T ( * @param agents Array of initial agents ) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( init\(Agent[] agents\) {) p n
() S 8 T () S 16 T () S
(// communicationMeduim = new CommMedium\(\);) c n
() p 8 T () S 16 T () S
(// this.agents = agents) c n
() p 8 T () S 16 T () N
() S 8 T () S 16 T () S
(// for each agent a) c n
() p 8 T () S 16 T () S
(//     a.init\(thisjjjj\)) c n
() p 8 T () S 16 T () N
() S 8 T () S 16 T () S
(// Set all the results to the initial values) c n
() p 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Called by the simulator in each step of simulation) N
() S 8 T ( * @return ENDSIM code if the simulation is over) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(int) k
( step\(Board board\) {) p n
() S 8 T () S 16 T () N
() S 8 T () S 16 T () S
(// 0. Update Agents Percepts) c n
() p 8 T () S 16 T () S
(// agPos[] = position of all the agents in the team) c n
() p 8 T () S 16 T () S
(// for each agent a in agents[]) c 48 T () N
() p 8 T () S 16 T () S
(//     a.perceive\(board, agPos[]\)) c n
() p 8 T () S 16 T () N
() S 8 T () S 16 T () N
() S 8 T () S 16 T () S
(// 1. Communication Phase) c n
() p 8 T () S 16 T () S
(// noMsgPass = 5  ) c n
() p 8 T () S 16 T () S
(// do) c n
() p 8 T () S 16 T () S
(//     for each agent a in agents[]) c n
() p 8 T () S 16 T () S
(//         a.doSend\(\);) c n
() p 8 T () S 16 T () S
(//     for each agent a in agents[]) c n
() p 8 T () S 16 T () S
(//         a.doReceive\(\);) c n
() p n
() S 8 T () S 16 T () S
(// ?? WEHRE SHOULD WE GET THE STATUS CODE FROM THE AGENT? ) c n
() p 8 T () S 16 T () S
(// \(in doReceive or in a separate method just for that?\) ) c n
() p 8 T () S 16 T () N
() S 8 T () S 16 T () S
(// ) c 24 T (   if \(there was no communication\)) N
(Team.java) (Page 1/2) (Oct 03, 11 15:48) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(//         noMsgPass--;) c n
() p 8 T () S 16 T () S
(//     else ) c n
() p 8 T () S 16 T () S
(//         noMsgPass = 5;) c n
() p 8 T () S 16 T () S
(// while \(there was at least one communication && noMsgPass != 0) c n
(\)) N
() p 8 T () S 16 T () N
() S 8 T () S 16 T () N
() S 8 T () S 16 T () S
(// 1. Action Phase) c n
() p 8 T () S 16 T () S
(// for each agent a in agents[]) c n
() p 8 T () S 16 T () S
(//     a.act\(\)) c n
() p 8 T () S 16 T () N
() S 8 T () S 16 T () S
(return) K
( 0;) p n
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Returns the team state, for the frontend usages.) N
() S 8 T ( * team state should consist all the information about the agents' ) N
() S 8 T ( * position, resources, etc. ) N
() S 8 T ( * @return) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( TeamState getTeamState\(\) {) p n
() S 8 T () S 16 T () N
() S 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Calls the send method of the communication medium) N
() S 8 T ( * @param sender The sender Agent) N
() S 8 T ( * @param receiver The reciever Agent) N
() S 8 T ( * @param msg The message) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( send\(Agent sender, Agent receiver, String msg\) {) p n
() S 8 T () S 16 T (communicationMeduim.send\(sender, receiver, msg\);) N
() S 8 T () S 16 T () S
(//or if the communicationMedium deals with the integers) c n
() p 8 T () S 16 T () S
(//instead of objects, the sender and receiver objects) c n
() p 8 T () S 16 T () S
(//can be mapped to their integer indices before calling) c n
() p 8 T () S 16 T () S
(//the method in communicationMedium) c n
() p 8 T (}) N
() S 8 T () N
() S 8 T () S
(/**) C n
() S 8 T ( * Calls the receive method of the communication medium.) N
() S 8 T ( * @param receiver The receiver agent) N
() S 8 T ( * @return The list of all incoming messages for the receiver agent) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( HashMap<Agent,String> receive\(Agent receiver\) {) p n
() S 8 T () S 16 T () S
(//or if the communicationMedium deals with the integers) c n
() p 8 T () S 16 T () S
(//instead of objects, the receiver objects) c n
() p 8 T () S 16 T () S
(//can be mapped to its integer indices before calling) c n
() p 8 T () S 16 T () S
(//the method in communicationMedium) c n
() p 8 T () S 16 T () S
(return) K
( communicationMeduim.receive\(receiver\);) p 64 T () S 72 T () N
() S 8 T (}) N
() S 8 T () N
(}) N
(Team.java) (Page 2/2) (Oct 03, 11 15:48) title
border
grestore
(Printed by omimo) rhead
(Team.java) (10/11) (Monday October 03, 2011) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 11
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( massim;) p n
() N
(/**) C n
( * Class to hold the information about the team.) N
( * All the agents' positions, resources, points, ) N
( * etc.) N
( * This class is used by the frontends for representation) N
( * and post-processing purposes only.) N
( * ) N
( * @author Omid Alemi) N
( * @version 1.0) N
( */) N
(public) K
( ) p
(class) K
( ) p
(TeamState) L
( {) p n
() N
(}) N
(TeamState.java) (Page 1/1) (Oct 02, 11 21:52) title
border
grestore
(Printed by omimo) rhead
(TeamState.java) (11/11) (Monday October 03, 2011) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
